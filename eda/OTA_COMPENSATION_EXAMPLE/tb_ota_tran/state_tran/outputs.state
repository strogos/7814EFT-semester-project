_outputList = nil
 _envSaveOptions = nil
savedComponent = (let
(tmp1)
(unless tmp1
tmp1 = make_sevOutputStruct()
)
(unless tmp1
tmp1 = (ncons nil)
)
tmp1->inLastSet = nil
tmp1->sqlStatement = nil
tmp1->definedIn = "XYZ"
tmp1->name = "tran-out"
tmp1->expression = nil
tmp1->signal = "/out"
tmp1->scriptFile = ""
tmp1->type2 = nil
tmp1->evalType = nil
tmp1->displayIt = 't
tmp1->internalName = nil
tmp1->masterName = nil
tmp1->masterScriptFile = nil
tmp1->saveScriptFile = nil
tmp1->saveMasterScriptFile = nil
tmp1->isReferenced = nil
tmp1->lastEvalTime = nil
tmp1->origin = nil
tmp1->type = 'net
tmp1->areaTable = nil
tmp1->selectionDetail = (let
(tmp1)
tmp1 = (let
(tmp1 tmp2)
tmp1 = 'color
tmp2 = (let
(tmp1 tmp2)
tmp1 = "y2"
tmp2 = "drawing"
list(tmp1 tmp2)
)
list(tmp1 tmp2)
)
list(tmp1)
)
tmp1->value = nil
tmp1->plot = 't
tmp1->save = 't
tmp1->march = nil
tmp1->index = 1
tmp1->timeStamp = nil
tmp1->graphType = nil
tmp1->yaxisLabel = nil
tmp1->label = nil
tmp1->yaxisUnit = nil
list(tmp1)
)
_outputList = nconc( _outputList savedComponent) 
savedComponent = nil 
savedComponent = (let
(tmp1)
(unless tmp1
tmp1 = make_sevOutputStruct()
)
(unless tmp1
tmp1 = (ncons nil)
)
tmp1->inLastSet = nil
tmp1->definedIn = "XYZ"
tmp1->name = "tran-in"
tmp1->expression = nil
tmp1->signal = "/in"
tmp1->scriptFile = ""
tmp1->type2 = nil
tmp1->evalType = nil
tmp1->displayIt = 't
tmp1->internalName = nil
tmp1->masterName = nil
tmp1->masterScriptFile = nil
tmp1->saveScriptFile = nil
tmp1->saveMasterScriptFile = nil
tmp1->isReferenced = nil
tmp1->lastEvalTime = nil
tmp1->origin = nil
tmp1->type = 'net
tmp1->areaTable = nil
tmp1->selectionDetail = (let
(tmp1)
tmp1 = (let
(tmp1 tmp2)
tmp1 = 'color
tmp2 = (let
(tmp1 tmp2)
tmp1 = "y3"
tmp2 = "drawing"
list(tmp1 tmp2)
)
list(tmp1 tmp2)
)
list(tmp1)
)
tmp1->value = nil
tmp1->plot = 't
tmp1->save = 't
tmp1->march = nil
tmp1->index = 2
tmp1->timeStamp = nil
tmp1->graphType = nil
tmp1->yaxisLabel = nil
tmp1->label = nil
tmp1->yaxisUnit = nil
list(tmp1)
)
_outputList = nconc( _outputList savedComponent) 
savedComponent = nil 
savedComponent = (let
(tmp1)
(unless tmp1
tmp1 = make_sevOutputStruct()
)
(unless tmp1
tmp1 = (ncons nil)
)
tmp1->definedIn = ""
tmp1->name = "tran-spectrum_sinad"
tmp1->expression = (let
(tmp1 tmp2 tmp3 tmp4 tmp5 tmp6 tmp7 tmp8 tmp9 tmp10 tmp11 tmp12 tmp13 tmp14)
tmp1 = 'spectrumMeasurement
tmp2 = (let
(tmp1 tmp2 tmp3 tmp4)
tmp1 = 'v
tmp2 = "/out"
tmp3 = '?result
tmp4 = "tran"
list(tmp1 tmp2 tmp3 tmp4)
)
tmp3 = 't
tmp4 = 9.9999999999999995e-08
tmp5 = 2.0999999999999998e-06
tmp6 = 1024
tmp7 = 500000
tmp8 = 2.5600000000000000e+08
tmp9 = 1
tmp10 = "Hanning"
tmp11 = 0
tmp12 = 0
tmp13 = 5
tmp14 = "sinad"
list(tmp1 tmp2 tmp3 tmp4 tmp5 tmp6 tmp7 tmp8 tmp9 tmp10 tmp11 tmp12 tmp13 tmp14)
)
tmp1->signal = nil
tmp1->scriptFile = ""
tmp1->type2 = nil
tmp1->evalType = nil
tmp1->displayIt = 't
tmp1->internalName = nil
tmp1->masterName = nil
tmp1->masterScriptFile = nil
tmp1->saveScriptFile = nil
tmp1->saveMasterScriptFile = nil
tmp1->isReferenced = nil
tmp1->lastEvalTime = nil
tmp1->origin = nil
tmp1->type = nil
tmp1->areaTable = nil
tmp1->selectionDetail = nil
tmp1->value = nil
tmp1->plot = 't
tmp1->save = 't
tmp1->march = nil
tmp1->index = 3
tmp1->timeStamp = nil
tmp1->graphType = nil
tmp1->yaxisLabel = nil
tmp1->label = nil
tmp1->yaxisUnit = nil
list(tmp1)
)
_outputList = nconc( _outputList savedComponent) 
savedComponent = nil 
savedComponent = (let
(tmp1)
(unless tmp1
tmp1 = make_sevOutputStruct()
)
(unless tmp1
tmp1 = (ncons nil)
)
tmp1->definedIn = ""
tmp1->name = "spectrum_fft"
tmp1->expression = (let
(tmp1)
tmp1 = (let
(tmp1 tmp2)
tmp1 = 'db20
tmp2 = (let
(tmp1 tmp2 tmp3 tmp4 tmp5 tmp6 tmp7 tmp8 tmp9)
tmp1 = 'dft
tmp2 = (let
(tmp1 tmp2 tmp3 tmp4)
tmp1 = 'value
tmp2 = (let
(tmp1 tmp2)
tmp1 = 'VT
tmp2 = "/out"
list(tmp1 tmp2)
)
tmp3 = "vin_sig"
tmp4 = 2.5000000000000000e-01
list(tmp1 tmp2 tmp3 tmp4)
)
tmp3 = 0.0000000000000000e+00
tmp4 = 8.0000000000000002e-08
tmp5 = 1024
tmp6 = "Rectangular"
tmp7 = 0
tmp8 = 0
tmp9 = 1
list(tmp1 tmp2 tmp3 tmp4 tmp5 tmp6 tmp7 tmp8 tmp9)
)
list(tmp1 tmp2)
)
list(tmp1)
)
tmp1->signal = nil
tmp1->scriptFile = ""
tmp1->type2 = nil
tmp1->evalType = nil
tmp1->displayIt = 't
tmp1->internalName = nil
tmp1->masterName = nil
tmp1->masterScriptFile = nil
tmp1->saveScriptFile = nil
tmp1->saveMasterScriptFile = nil
tmp1->isReferenced = nil
tmp1->lastEvalTime = nil
tmp1->origin = nil
tmp1->type = nil
tmp1->areaTable = nil
tmp1->selectionDetail = nil
tmp1->value = nil
tmp1->plot = nil
tmp1->save = nil
tmp1->march = nil
tmp1->index = 4
tmp1->timeStamp = nil
tmp1->graphType = nil
tmp1->yaxisLabel = nil
tmp1->label = nil
tmp1->yaxisUnit = nil
list(tmp1)
)
_outputList = nconc( _outputList savedComponent) 
savedComponent = nil 
savedComponent = (let
(tmp1)
(unless tmp1
tmp1 = make_sevOutputStruct()
)
(unless tmp1
tmp1 = (ncons nil)
)
tmp1->inLastSet = nil
tmp1->sqlStatement = nil
tmp1->name = nil
tmp1->expression = nil
tmp1->signal = "/vsig/MINUS"
tmp1->scriptFile = nil
tmp1->type2 = nil
tmp1->evalType = nil
tmp1->displayIt = nil
tmp1->internalName = nil
tmp1->masterName = nil
tmp1->masterScriptFile = nil
tmp1->saveScriptFile = nil
tmp1->saveMasterScriptFile = nil
tmp1->isReferenced = nil
tmp1->lastEvalTime = nil
tmp1->origin = nil
tmp1->type = 'terminal
tmp1->areaTable = nil
tmp1->selectionDetail = (let
(tmp1)
tmp1 = (let
(tmp1 tmp2)
tmp1 = 'color
tmp2 = (let
(tmp1 tmp2)
tmp1 = "y3"
tmp2 = "drawing"
list(tmp1 tmp2)
)
list(tmp1 tmp2)
)
list(tmp1)
)
tmp1->value = nil
tmp1->plot = nil
tmp1->save = nil
tmp1->march = nil
tmp1->index = 5
tmp1->timeStamp = nil
tmp1->graphType = nil
tmp1->yaxisLabel = nil
tmp1->label = nil
tmp1->yaxisUnit = nil
list(tmp1)
)
_outputList = nconc( _outputList savedComponent) 
savedComponent = nil 
savedComponent = (let
(tmp1)
(unless tmp1
tmp1 = make_sevOutputStruct()
)
(unless tmp1
tmp1 = (ncons nil)
)
tmp1->inLastSet = nil
tmp1->sqlStatement = nil
tmp1->name = nil
tmp1->expression = nil
tmp1->signal = "/vsig/PLUS"
tmp1->scriptFile = nil
tmp1->type2 = nil
tmp1->evalType = nil
tmp1->displayIt = nil
tmp1->internalName = nil
tmp1->masterName = nil
tmp1->masterScriptFile = nil
tmp1->saveScriptFile = nil
tmp1->saveMasterScriptFile = nil
tmp1->isReferenced = nil
tmp1->lastEvalTime = nil
tmp1->origin = nil
tmp1->type = 'terminal
tmp1->areaTable = nil
tmp1->selectionDetail = (let
(tmp1)
tmp1 = (let
(tmp1 tmp2)
tmp1 = 'color
tmp2 = (let
(tmp1 tmp2)
tmp1 = "y4"
tmp2 = "drawing"
list(tmp1 tmp2)
)
list(tmp1 tmp2)
)
list(tmp1)
)
tmp1->value = nil
tmp1->plot = nil
tmp1->save = nil
tmp1->march = nil
tmp1->index = 6
tmp1->timeStamp = nil
tmp1->graphType = nil
tmp1->yaxisLabel = nil
tmp1->label = nil
tmp1->yaxisUnit = nil
list(tmp1)
)
_outputList = nconc( _outputList savedComponent) 
savedComponent = nil 
_envSaveOptions = (let
(tmp1 tmp2 tmp3 tmp4 tmp5 tmp6 tmp7 tmp8 tmp9 tmp10 tmp11 tmp12 tmp13 tmp14 tmp15 tmp16 tmp17 tmp18 tmp19 tmp20 tmp21)
tmp1 = (let
(tmp1 tmp2)
tmp1 = 'fastViewOption
list(tmp1 tmp2)
)
tmp2 = (let
(tmp1 tmp2)
tmp1 = 'simOutputFormat
tmp2 = "psfxl"
list(tmp1 tmp2)
)
tmp3 = (let
(tmp1 tmp2)
tmp1 = 'separator4
tmp2 = ""
list(tmp1 tmp2)
)
tmp4 = (let
(tmp1 tmp2)
tmp1 = 'extremesInfo
list(tmp1 tmp2)
)
tmp5 = (let
(tmp1 tmp2)
tmp1 = 'assertsInfo
list(tmp1 tmp2)
)
tmp6 = (let
(tmp1 tmp2)
tmp1 = 'designParamValInfo
tmp2 = 't
list(tmp1 tmp2)
)
tmp7 = (let
(tmp1 tmp2)
tmp1 = 'subcktsInfo
tmp2 = 't
list(tmp1 tmp2)
)
tmp8 = (let
(tmp1 tmp2)
tmp1 = 'primitivesInfo
tmp2 = 't
list(tmp1 tmp2)
)
tmp9 = (let
(tmp1 tmp2)
tmp1 = 'outputParamInfo
tmp2 = 't
list(tmp1 tmp2)
)
tmp10 = (let
(tmp1 tmp2)
tmp1 = 'elementInfo
tmp2 = 't
list(tmp1 tmp2)
)
tmp11 = (let
(tmp1 tmp2)
tmp1 = 'modelParamInfo
tmp2 = 't
list(tmp1 tmp2)
)
tmp12 = (let
(tmp1 tmp2)
tmp1 = 'separator3
tmp2 = ""
list(tmp1 tmp2)
)
tmp13 = (let
(tmp1 tmp2)
tmp1 = 'saveahdlvars
tmp2 = ""
list(tmp1 tmp2)
)
tmp14 = (let
(tmp1 tmp2)
tmp1 = 'separator2
tmp2 = ""
list(tmp1 tmp2)
)
tmp15 = (let
(tmp1 tmp2)
tmp1 = 'useprobes
tmp2 = ""
list(tmp1 tmp2)
)
tmp16 = (let
(tmp1 tmp2)
tmp1 = 'subcktprobelvl
tmp2 = ""
list(tmp1 tmp2)
)
tmp17 = (let
(tmp1 tmp2)
tmp1 = 'currents
tmp2 = ""
list(tmp1 tmp2)
)
tmp18 = (let
(tmp1 tmp2)
tmp1 = 'separator1
tmp2 = ""
list(tmp1 tmp2)
)
tmp19 = (let
(tmp1 tmp2)
tmp1 = 'nestlvl
tmp2 = ""
list(tmp1 tmp2)
)
tmp20 = (let
(tmp1 tmp2)
tmp1 = 'pwr
tmp2 = ""
list(tmp1 tmp2)
)
tmp21 = (let
(tmp1 tmp2)
tmp1 = 'save
tmp2 = "allpub"
list(tmp1 tmp2)
)
list(tmp1 tmp2 tmp3 tmp4 tmp5 tmp6 tmp7 tmp8 tmp9 tmp10 tmp11 tmp12 tmp13 tmp14 tmp15 tmp16 tmp17 tmp18 tmp19 tmp20 tmp21)
)
savedComponent = list( _outputList _envSaveOptions ) 
_outputList = 'unbound
 _envSaveOptions = 'unbound
